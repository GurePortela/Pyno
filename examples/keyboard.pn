[{'type': 'field', 'size': (180, 30), 'code': 'import pyglet', 'parent': 16, 'x': 575, 'connects': [], 'y': 525}, {'type': 'field', 'size': (300, 30), 'code': 'pyglet.window.Window(300,300)', 'parent': 17, 'x': 391, 'connects': [], 'y': 433}, {'type': 'node', 'size': (540, 231), 'code': "def draw(window=None, pos=[0, 0]):\n  window.switch_to()\n  window.clear()\n  x, y = int(pos[0]), int(pos[1])\n  pyglet.graphics.draw_indexed(4, \n          pyglet.gl.GL_TRIANGLES,\r\n    [0, 1, 2, 0, 2, 3],\r\n    ('v2i', (x,      y,\r\n             x + 50, y,\r\n             x + 50, y +50,\r\n             x,      y + 50))\r\n    )", 'color': (99, 114, 116), 'x': 422, 'parent': 18, 'connects': [{'output': {'put': {'name': 'output'}, 'node': 17}, 'input': {'put': {'name': 'window'}}}, {'output': {'put': {'name': 'output'}, 'node': 23}, 'input': {'put': {'name': 'pos'}}}], 'y': 80}, {'type': 'field', 'size': (212, 102), 'code': "'''\nGetting keyboard events from window\n\n'''", 'parent': 19, 'x': 165, 'connects': [], 'y': 220}, {'type': 'node', 'size': (395, 329), 'code': "G['key'] = []\n\ndef keyboard(window=0):\n\n  @window.event\n  def on_key_press(symbol, mod):\n    G['key'].append(symbol)\n\n  @window.event\n  def on_key_release(symbol, mod):\n    if symbol in G['key']:\n      G['key'].pop(G['key'].index(symbol))\n\n  return G['key']", 'color': (93, 93, 89), 'x': 497, 'parent': 20, 'connects': [{'output': {'put': {'name': 'output'}, 'node': 17}, 'input': {'put': {'name': 'window'}}}], 'y': 367}, {'type': 'field', 'size': (238, 30), 'code': '[]', 'parent': 21, 'x': 592, 'connects': [{'output': {'put': {'name': "G['key']"}, 'node': 20}, 'input': {'put': {'name': 'input'}}}], 'y': 295}, {'type': 'node', 'size': (629, 307), 'code': "S['position'] = [20, 20]\n\ndef position(key=[]):\n\n  key = list(map(lambda x: pyglet.window.key.symbol_string(x), key))\n\n  if 'UP' in key:\n    S['position'][1] += 1\n  if 'DOWN' in key:\n    S['position'][1] -= 1\n  if 'RIGHT' in key:\n    S['position'][0] += 1\n  if 'LEFT' in key:\n    S['position'][0] -= 1\n  return S['position']", 'color': (101, 91, 127), 'x': 509, 'parent': 22, 'connects': [{'output': {'put': {'name': 'output'}, 'node': 21}, 'input': {'put': {'name': 'key'}}}], 'y': 224}, {'type': 'field', 'size': (158, 30), 'code': '[20, 20]', 'parent': 23, 'x': 582, 'connects': [{'output': {'put': {'name': "S['position']"}, 'node': 22}, 'input': {'put': {'name': 'input'}}}], 'y': 152}]