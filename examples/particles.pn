[{'y': 165, 'parent': 16, 'connects': [], 'type': 'field', 'code': '# Patricles test\n\n# use mouse right and left\n# buttons to interact\n\nimport pyglet\nfrom pyglet.window.mouse import *\nimport math\nfrom random import random', 'x': 185, 'size': (340, 179)}, {'y': 513, 'color': (129, 105, 124), 'parent': 17, 'connects': [], 'type': 'node', 'code': "S['window'] = pyglet.window.Window(450, 450)\n\ndef create_window():\n  return S['window']", 'x': 260, 'size': (433, 162)}, {'y': 224, 'color': (99, 114, 116), 'parent': 18, 'connects': [{'input': {'put': {'name': 'poses'}}, 'output': {'put': {'name': "S['p']"}, 'node': 19}}], 'type': 'node', 'code': "S['rects'] = []\nS['batch'] = None\n\ndef draw_rects(poses=[(0,0),(10,10),(30,30)]):\n\n  # make new array of rects if count not match\n  count = len(poses)\n  if len(S['rects']) != count:\n    S['rects'] = []\n    S['batch'] = pyglet.graphics.Batch()\n    for i in range(count):\n      S['rects'].append(S['batch'].add(\n                  1, pyglet.gl.GL_POINTS, None,\n                  ('v2i', (0, 0)),\n                  ('c4B', (255,255,255,10))))\n\n  # new poses and sizes\n  for rect, pos in zip(S['rects'], poses):\n    x, y = int(pos[0]), int(pos[1])  \n    rect.vertices = (x, y)\n\n  return S['batch']", 'x': 542, 'size': (509, 487)}, {'y': 310, 'color': (86, 111, 98), 'parent': 19, 'connects': [{'input': {'put': {'name': 'count'}}, 'output': {'put': {'name': 'output'}, 'node': 20}}, {'input': {'put': {'name': 'magnet'}}, 'output': {'put': {'name': "G['mouse_pos']"}, 'node': 22}}, {'input': {'put': {'name': 'inv'}}, 'output': {'put': {'name': "G['click']"}, 'node': 22}}], 'type': 'node', 'code': "S['p'] = []\nS['a'] = []\n\ndef particles(inv=False, magnet=(0,0), count=10):\n  if count != len(S['p']):\n    S['p'] = []\n    S['a'] = []\n    for i in range(count):\n      S['p'].append([225,225])\n      S['a'].append([random()*200-100,\n                     random()*200-100])\n\n  for pos, acc in zip(S['p'], S['a']):\n    dist = math.sqrt((pos[0] - magnet[0])**2 +\n                     (pos[1] - magnet[1])**2)\n    acc[0] *= 0.6\n    acc[1] *= 0.6\n    if not inv:\n      acc[0] += (pos[0] - magnet[0]) / dist * 2\n      acc[1] += (pos[1] - magnet[1]) / dist * 2\n    else:\n      acc[0] -= (pos[0] - magnet[0]) / dist * 2\n      acc[1] -= (pos[1] - magnet[1]) / dist * 2\n    pos[0] += acc[0] / 5\n    pos[1] += acc[1] / 5\n    if not (0 < pos[0] < 450):\n      acc[0] *= -20\n    if not (0 < pos[1] < 450):\n      acc[1] *= -20\n    \n  return S['p']", 'x': 542, 'size': (523, 594)}, {'y': 506, 'parent': 20, 'connects': [], 'type': 'field', 'code': '1024', 'x': 500, 'size': (98, 30)}, {'y': 140, 'color': (103, 92, 84), 'parent': 21, 'connects': [{'input': {'put': {'name': 'window'}}, 'output': {'put': {'name': "S['window']"}, 'node': 17}}, {'input': {'put': {'name': 'batch'}}, 'output': {'put': {'name': "S['batch']"}, 'node': 18}}, {'input': {'put': {'name': 'trail'}}, 'output': {'put': {'name': "G['rclick']"}, 'node': 22}}], 'type': 'node', 'code': 'def draw_batch(window=None,\n               trail=False,\n               batch=None):\n  window.switch_to()\n  if not trail:\n    window.clear()\n  batch.draw()', 'x': 494, 'size': (317, 178)}, {'y': 438, 'color': (80, 81, 92), 'parent': 22, 'connects': [{'input': {'put': {'name': 'window'}}, 'output': {'put': {'name': "S['window']"}, 'node': 17}}], 'type': 'node', 'code': "G['mouse_pos'] = [0,0]\nG['click'] = False\nG['rclick'] = False\n\ndef mouse(window=0):\n  @window.event\n  def on_mouse_motion(x, y, \n                      dx, dy):\n    G['mouse_pos'] = x, y\n\n  @window.event\n  def on_mouse_drag(x, y, dx, dy, \n                    buttons, modifiers):\n    G['mouse_pos'] = x, y\n\n  @window.event\n  def on_mouse_press(x, y, \n                     button, modifiers):\n    if button & LEFT:\n      G['click'] = True\n    elif button & RIGHT:\n      G['rclick'] = True\n\n  @window.event\n  def on_mouse_release(x, y, \n                       button, modifiers):\n    if button & LEFT:\n      G['click'] = False\n    elif button & RIGHT:\n      G['rclick'] = False\n\n  return G['rclick'], G['click'], G['mouse_pos']", 'x': 373, 'size': (538, 603)}, {'y': 505, 'parent': 23, 'connects': [], 'type': 'field', 'code': '# number of particles', 'x': 672, 'size': (221, 30)}]