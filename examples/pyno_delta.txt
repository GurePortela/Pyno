[{'parent': 1, 'connects': [{'input': {'put': {'name': 'x'}}, 'output': {'put': {'name': 'result'}, 'node': 6}}, {'input': {'put': {'name': 'w'}}, 'output': {'put': {'name': 'w'}, 'node': 2}}], 'x': 31, 'type': 'node', 'color': (93, 115, 92), 'y': -165, 'size': (509, 171), 'code': "def quad(w=None, x=0):\n    pgl.graphics.draw_indexed(4, pgl.gl.GL_TRIANGLES,\r\n    [0, 1, 2, 0, 2, 3],\r\n    ('v2i', (100+x, 100,\r\n             150+x, 100,\r\n             150+x, 150,\r\n             100+x, 150))\r\n    )"}, {'parent': 2, 'connects': [], 'x': -228, 'type': 'node', 'color': (128, 100, 109), 'y': -11, 'size': (545, 177), 'code': "import pyglet as pgl\ndef createWindow():\n    try: \n        globals()['w'].clear()\n    except:\n        globals()['w'] = pgl.window.Window(resizable=True)\n    return w\n    "}, {'parent': 3, 'connects': [{'input': {'put': {'name': 'val'}}, 'output': {'put': {'name': "G['dt']"}, 'node': 14}}], 'x': 28, 'type': 'node', 'color': (92, 82, 129), 'y': 273, 'size': (339, 150), 'code': "def accum(val=0, accum=None):\n    try:\n        globals()['acc'] += val\n    except:\n        globals()['acc'] = 0\n    return globals()['acc']"}, {'parent': 4, 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': 'result'}, 'node': 5}}], 'x': -3, 'type': 'node', 'color': (124, 125, 89), 'y': 77, 'size': (300, 150), 'code': 'def into(a=0):\n    result = int(a*100)\n    return result'}, {'parent': 5, 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': "globals()['acc']"}, 'node': 3}}], 'x': 77, 'type': 'node', 'color': (92, 120, 106), 'y': 187, 'size': (300, 150), 'code': 'import math\ndef toSin(a=0):\n    result = math.sin(a)\n    return result'}, {'parent': 6, 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': 'result'}, 'node': 4}}, {'input': {'put': {'name': 'b'}}, 'output': {'put': {'name': 'output'}, 'node': 7}}], 'x': 30, 'type': 'node', 'color': (117, 115, 110), 'y': -7, 'size': (300, 150), 'code': 'def suum(a=0, b=0):\n    result = a + b\n    return result'}, {'parent': 7, 'x': 112, 'type': 'field', 'connects': [], 'y': 86, 'size': (74, 30), 'code': '233'}, {'parent': 8, 'connects': [{'input': {'put': {'name': 'x'}}, 'output': {'put': {'name': 'result'}, 'node': 12}}, {'input': {'put': {'name': 'w'}}, 'output': {'put': {'name': 'w'}, 'node': 2}}], 'x': 248, 'type': 'node', 'color': (93, 115, 92), 'y': -167, 'size': (509, 171), 'code': "def quad(w=None, x=0):\n    pgl.graphics.draw_indexed(4, pgl.gl.GL_TRIANGLES,\r\n    [0, 1, 2, 0, 2, 3],\r\n    ('v2i', (100+x, 100,\r\n             150+x, 100,\r\n             150+x, 150,\r\n             100+x, 150))\r\n    )"}, {'parent': 9, 'connects': [{'input': {'put': {'name': 'val'}}, 'output': {'put': {'name': "G['dt']"}, 'node': 14}}], 'x': 312, 'type': 'node', 'color': (92, 82, 129), 'y': 296, 'size': (339, 150), 'code': "def accum(val=0, accum=None):\n    try:\n        globals()['acc'] += val\n    except:\n        globals()['acc'] = 0\n    return globals()['acc']"}, {'parent': 10, 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': 'result'}, 'node': 11}}], 'x': 284, 'type': 'node', 'color': (124, 125, 89), 'y': 66, 'size': (300, 150), 'code': 'def into(a=0):\n    result = int(a*100)\n    return result'}, {'parent': 11, 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': "globals()['acc']"}, 'node': 9}}], 'x': 385, 'type': 'node', 'color': (92, 120, 106), 'y': 173, 'size': (300, 150), 'code': 'import math\ndef toSin(a=0):\n    result = math.sin(a+0.3)\n    return result'}, {'parent': 12, 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': 'result'}, 'node': 10}}, {'input': {'put': {'name': 'b'}}, 'output': {'put': {'name': 'output'}, 'node': 13}}], 'x': 318, 'type': 'node', 'color': (117, 115, 110), 'y': -18, 'size': (300, 150), 'code': 'def suum(a=0, b=0):\n    result = a + b\n    return result'}, {'parent': 13, 'x': 403, 'type': 'field', 'connects': [], 'y': 76, 'size': (74, 30), 'code': '297'}, {'parent': 14, 'connects': [], 'x': 144, 'type': 'node', 'color': (84, 101, 83), 'y': 450, 'size': (300, 150), 'code': "def delta():\n    return G['dt']"}, {'parent': 15, 'connects': [{'input': {'put': {'name': 'w'}}, 'output': {'put': {'name': 'w'}, 'node': 2}}], 'x': -283, 'type': 'node', 'color': (81, 94, 118), 'y': -214, 'size': (300, 150), 'code': 'def getWindowSize(w=None):\n    width = w.width\n    height = w.height\n    return width, height'}, {'parent': 18, 'x': -336, 'type': 'field', 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'put': {'name': 'width'}, 'node': 15}}], 'y': -365, 'size': (70, 30), 'code': '728'}, {'parent': 19, 'x': -232, 'type': 'field', 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'put': {'name': 'height'}, 'node': 15}}], 'y': -361, 'size': (70, 30), 'code': '740'}, {'parent': 20, 'x': 199, 'type': 'field', 'connects': [], 'y': 171, 'size': (70, 30), 'code': "'?'"}]