[{'type': 'node', 'x': -434, 'connects': [], 'color': (170, 70, 120), 'size': (510, 243), 'parent': 51, 'y': 601, 'code': "#color(170,70,120)\nimport pyglet as pgl\ndef createWindow():\n    try: \n        S['w'].clear()      \n        window = S['w']\n    except:\n        S['w'] = pgl.window.Window(resizable=True,\n                                   width=500, height=500,\n                                   caption='render')\n        S['w'].activate()\n    return window\n    "}, {'type': 'node', 'x': -314, 'connects': [{'input': {'put': {'name': 'window'}}, 'output': {'node': 51, 'put': {'name': 'window'}}}], 'color': (170, 70, 120), 'size': (300, 150), 'parent': 52, 'y': 487, 'code': 'def getWindowSize(window=None):\n    width = window.width\n    height = window.height\n    return width, height'}, {'type': 'field', 'x': -263, 'connects': [], 'size': (72, 30), 'parent': 53, 'y': 226, 'code': '128'}, {'type': 'node', 'x': -122, 'connects': [{'input': {'put': {'name': 'r'}}, 'output': {'node': 55, 'put': {'name': 'output'}}}, {'input': {'put': {'name': 'g'}}, 'output': {'node': 56, 'put': {'name': 'output'}}}, {'input': {'put': {'name': 'b'}}, 'output': {'node': 57, 'put': {'name': 'output'}}}], 'color': (170, 70, 170), 'size': (300, 150), 'parent': 54, 'y': 210, 'code': '#color(170,70,170)\ndef color(r=100, g=100, b=100):\n    result = (r,g,b)\n    return result'}, {'type': 'field', 'x': -175, 'connects': [], 'size': (70, 30), 'parent': 55, 'y': 306, 'code': '120'}, {'type': 'field', 'x': -122, 'connects': [], 'size': (70, 30), 'parent': 56, 'y': 349, 'code': '56'}, {'type': 'field', 'x': -68, 'connects': [], 'size': (70, 30), 'parent': 57, 'y': 308, 'code': '25'}, {'type': 'node', 'x': -392, 'connects': [{'input': {'put': {'name': 'size'}}, 'output': {'node': 53, 'put': {'name': 'output'}}}, {'input': {'put': {'name': 'window'}}, 'output': {'node': 51, 'put': {'name': 'window'}}}, {'input': {'put': {'name': 'x'}}, 'output': {'node': 63, 'put': {'name': 'output'}}}, {'input': {'put': {'name': 'y'}}, 'output': {'node': 63, 'put': {'name': 'output'}}}, {'input': {'put': {'name': 'color'}}, 'output': {'node': 54, 'put': {'name': 'result'}}}], 'color': (170, 86, 65), 'size': (640, 380), 'parent': 62, 'y': 56, 'code': "#color(170,86,65)\ndef quad(window=None, x=0, y=0, size=10, color=(100, 100, 100)):\n    x = int(x)\n    y = int(y)\n    pgl.graphics.draw_indexed(4, pgl.gl.GL_TRIANGLES,\r\n        [0, 1, 2, 0, 2, 3],\r\n        ('v2i', (-size+x, -size+y,\r\n                  size+x, -size+y,\r\n                  size+x, size+y,\r\n                 -size+x, size+y))\r,\n        ('c3b', color*4)\n        )"}, {'type': 'field', 'x': -348, 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'node': 64, 'put': {'name': 'result'}}}], 'size': (80, 30), 'parent': 63, 'y': 226, 'code': '250.0'}, {'type': 'node', 'x': -347, 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'node': 52, 'put': {'name': 'width'}}}, {'input': {'put': {'name': 'b'}}, 'output': {'node': 66, 'put': {'name': 'output'}}}], 'color': (50, 100, 180), 'size': (300, 150), 'parent': 64, 'y': 329, 'code': '#color(50,100,180)\ndef div(a=0, b=1):\n    result = a / b\n    return result'}, {'type': 'field', 'x': -299, 'connects': [], 'size': (70, 30), 'parent': 66, 'y': 415, 'code': '2'}]