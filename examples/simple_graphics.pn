[{'parent': 16, 'type': 'field', 'connects': [], 'size': (272, 52), 'y': 506, 'code': 'import pyglet\nfrom math import sin, cos', 'x': 579}, {'parent': 17, 'type': 'field', 'connects': [], 'size': (300, 30), 'y': 410, 'code': 'pyglet.window.Window(300,300)', 'x': 465}, {'parent': 18, 'type': 'node', 'color': (99, 114, 116), 'connects': [{'input': {'put': {'name': 'window'}}, 'output': {'put': {'name': 'output'}, 'node': 17}}, {'input': {'put': {'name': 'x'}}, 'output': {'put': {'name': 'si'}, 'node': 19}}, {'input': {'put': {'name': 'y'}}, 'output': {'put': {'name': 'ci'}, 'node': 19}}], 'size': (540, 231), 'y': 83, 'code': "def draw(window=None, x=0, y=0):\n  window.switch_to()\n  window.clear()\n  x, y = int(x), int(y)\n  pyglet.graphics.draw_indexed(4, \n          pyglet.gl.GL_TRIANGLES,\r\n    [0, 1, 2, 0, 2, 3],\r\n    ('v2i', (100, 100,\r\n             150, 100,\r\n             150 + x, 150 + y,\r\n             100, 150))\r\n    )", 'x': 492}, {'parent': 19, 'type': 'node', 'color': (80, 123, 85), 'connects': [{'input': {'put': {'name': 'm'}}, 'output': {'put': {'name': 'output'}, 'node': 20}}, {'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': 'result'}, 'node': 23}}], 'size': (300, 150), 'y': 193, 'code': 'def sincos(a=0, m=1):\n  si = sin(a)*m\n  ci = cos(a)*m\n  return si, ci', 'x': 614}, {'parent': 20, 'type': 'field', 'connects': [], 'size': (70, 30), 'y': 289, 'code': '28', 'x': 680}, {'parent': 21, 'type': 'node', 'color': (124, 125, 123), 'connects': [], 'size': (300, 150), 'y': 354, 'code': "def time():\n  try:\n    S['t'] += G['dt']\n  except:\n    S['t'] = 0\n  return S['t']", 'x': 521}, {'parent': 22, 'type': 'field', 'connects': [], 'size': (212, 102), 'y': 506, 'code': "'''\nThere is example of some graphics stuff\n\n'''", 'x': 142}, {'parent': 23, 'type': 'node', 'color': (84, 85, 94), 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': "S['t']"}, 'node': 21}}, {'input': {'put': {'name': 'b'}}, 'output': {'put': {'name': 'output'}, 'node': 24}}], 'size': (300, 150), 'y': 276, 'code': 'def mul(a=0, b=1):\n    result = a * b\n    return result', 'x': 565}, {'parent': 24, 'type': 'field', 'connects': [], 'size': (81, 30), 'y': 355, 'code': '3.00', 'x': 608}]