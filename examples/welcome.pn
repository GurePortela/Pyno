[
    {
        "type": "node",
        "x": 557,
        "y": 411,
        "size": [
            300,
            150
        ],
        "color": [
            100,
            130,
            117
        ],
        "code": "def add(a=0, b=0):\n  result = a + b\n  return result\n\ncall = add",
        "connects": [
            {
                "output": {
                    "node": 13,
                    "put": {
                        "name": "output"
                    }
                },
                "input": {
                    "put": {
                        "name": "b"
                    }
                }
            },
            {
                "output": {
                    "node": 11,
                    "put": {
                        "name": "output"
                    }
                },
                "input": {
                    "put": {
                        "name": "a"
                    }
                }
            }
        ],
        "parent": 10
    },
    {
        "type": "field",
        "x": 499,
        "y": 520,
        "size": [
            70,
            30
        ],
        "code": "5",
        "connects": [],
        "parent": 11
    },
    {
        "type": "field",
        "x": 202,
        "y": 327,
        "size": [
            350,
            496
        ],
        "code": "#\n#         Welcome to Pyno!\n#\n#  Pyno is a visual programming env\n# based on Python\n#\n#  You can find info and tutorials\n# at https://github.com/honix/Pyno\n#\n#\n#         Basic controls\n#\n# Create - Node   press N or O\n#        - Field  press F\n#        - Sub    press S\n#\n# Pan    - right-mouse-button drag\n#\n# Zoom   - mouse wheel\n#\n#    ____\n#   |  _ \\ _   _  ____   ___\n#   | (_) ) | | ||  _ \\ / _ \\\n#   |  __/| |_| || | | | (_) )\n#   |_|   \\___  ||_| |_|\\___/\n#          (___/\n#",
        "connects": [],
        "parent": 12
    },
    {
        "type": "field",
        "x": 618,
        "y": 521,
        "size": [
            70,
            30
        ],
        "code": "20",
        "connects": [],
        "parent": 13
    },
    {
        "type": "field",
        "x": 481,
        "y": 291,
        "size": [
            70,
            30
        ],
        "code": "25",
        "connects": [
            {
                "output": {
                    "node": 10,
                    "put": {
                        "name": "result"
                    }
                },
                "input": {
                    "put": {
                        "name": "input"
                    }
                }
            }
        ],
        "parent": 14
    },
    {
        "type": "node",
        "x": 640,
        "y": 286,
        "size": [
            300,
            150
        ],
        "color": [
            116,
            127,
            128
        ],
        "code": "def devide(a=0, b=1):\n  result = a // b\n  return result\n\ncall = devide",
        "connects": [
            {
                "output": {
                    "node": 16,
                    "put": {
                        "name": "output"
                    }
                },
                "input": {
                    "put": {
                        "name": "b"
                    }
                }
            },
            {
                "output": {
                    "node": 10,
                    "put": {
                        "name": "result"
                    }
                },
                "input": {
                    "put": {
                        "name": "a"
                    }
                }
            }
        ],
        "parent": 15
    },
    {
        "type": "field",
        "x": 696,
        "y": 409,
        "size": [
            70,
            30
        ],
        "code": "5",
        "connects": [],
        "parent": 16
    },
    {
        "type": "field",
        "x": 640,
        "y": 168,
        "size": [
            70,
            30
        ],
        "code": "5",
        "connects": [
            {
                "output": {
                    "node": 15,
                    "put": {
                        "name": "result"
                    }
                },
                "input": {
                    "put": {
                        "name": "input"
                    }
                }
            }
        ],
        "parent": 17
    },
    {
        "type": "field",
        "x": 1038,
        "y": 485,
        "size": [
            170,
            30
        ],
        "code": "lambda x: x - 5",
        "connects": [],
        "parent": 18
    },
    {
        "type": "field",
        "x": 1336,
        "y": 481,
        "size": [
            129,
            30
        ],
        "code": "range(1,10)",
        "connects": [],
        "parent": 19
    },
    {
        "type": "node",
        "x": 1193,
        "y": 343,
        "size": [
            300,
            150
        ],
        "color": [
            84,
            114,
            81
        ],
        "code": "def outOfFunction(a=None, b=()):\n    result = tuple(map(a,b))\n    return result\n\ncall = outOfFunction",
        "connects": [
            {
                "output": {
                    "node": 19,
                    "put": {
                        "name": "output"
                    }
                },
                "input": {
                    "put": {
                        "name": "b"
                    }
                }
            },
            {
                "output": {
                    "node": 18,
                    "put": {
                        "name": "output"
                    }
                },
                "input": {
                    "put": {
                        "name": "a"
                    }
                }
            }
        ],
        "parent": 20
    },
    {
        "type": "field",
        "x": 1159,
        "y": 246,
        "size": [
            328,
            30
        ],
        "code": "(-4, -3, -2, -1, 0, 1, 2, 3, 4)",
        "connects": [
            {
                "output": {
                    "node": 20,
                    "put": {
                        "name": "result"
                    }
                },
                "input": {
                    "put": {
                        "name": "input"
                    }
                }
            }
        ],
        "parent": 21
    },
    {
        "type": "node",
        "x": 842,
        "y": 155,
        "size": [
            300,
            219
        ],
        "color": [
            126,
            120,
            86
        ],
        "code": "S['timer'] = 0\n\ndef timeSinus():\n  import math\n\n  S['timer'] += G['dt']\n  result = math.sin(S['timer'])\n  return result\n\ncall = timeSinus\n",
        "connects": [],
        "parent": 22
    },
    {
        "type": "field",
        "x": 890,
        "y": 43,
        "size": [
            224,
            30
        ],
        "code": "-0.9585874289302495",
        "connects": [
            {
                "output": {
                    "node": 22,
                    "put": {
                        "name": "result"
                    }
                },
                "input": {
                    "put": {
                        "name": "input"
                    }
                }
            }
        ],
        "parent": 23
    },
    {
        "type": "field",
        "x": 1664,
        "y": 293,
        "size": [
            326,
            52
        ],
        "code": "# Check examples folder for more",
        "connects": [],
        "parent": 24
    },
    {
        "type": "node",
        "x": 1674,
        "y": 506,
        "size": [
            300,
            150
        ],
        "color": [
            121,
            91,
            120
        ],
        "code": "call = lambda x: x",
        "connects": [
            {
                "output": {
                    "node": 26,
                    "put": {
                        "name": "output"
                    }
                },
                "input": {
                    "put": {
                        "name": "x"
                    }
                }
            }
        ],
        "parent": 25
    },
    {
        "type": "field",
        "x": 1662,
        "y": 584,
        "size": [
            70,
            30
        ],
        "code": "None\n",
        "connects": [],
        "parent": 26
    },
    {
        "type": "field",
        "x": 1657,
        "y": 427,
        "size": [
            70,
            30
        ],
        "code": "None",
        "connects": [
            {
                "output": {
                    "node": 25,
                    "put": {
                        "name": "result"
                    }
                },
                "input": {
                    "put": {
                        "name": "input"
                    }
                }
            }
        ],
        "parent": 27
    },
    {
        "type": "node",
        "x": 1119,
        "y": 159,
        "size": [
            300,
            150
        ],
        "color": [
            92,
            113,
            125
        ],
        "code": "path = 'nodes/timeSinus.py'\n\nwith open(path) as file:\n  exec(file.read())\n",
        "connects": [],
        "parent": 28
    },
    {
        "type": "field",
        "x": 1170,
        "y": 46,
        "size": [
            218,
            30
        ],
        "code": "-0.9585874289302495",
        "connects": [
            {
                "output": {
                    "node": 28,
                    "put": {
                        "name": "result"
                    }
                },
                "input": {
                    "put": {
                        "name": "input"
                    }
                }
            }
        ],
        "parent": 29
    }
]