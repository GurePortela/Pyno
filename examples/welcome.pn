[{'parent': 2, 'y': 411, 'type': 'node', 'x': 556, 'size': (300, 150), 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'node': 3, 'put': {'name': 'output'}}}, {'input': {'put': {'name': 'b'}}, 'output': {'node': 5, 'put': {'name': 'output'}}}], 'code': 'def add(a=0, b=0):\n    result = a + b\n    return result', 'color': (100, 130, 117)}, {'parent': 3, 'y': 520, 'type': 'field', 'x': 499, 'size': (70, 30), 'connects': [], 'code': '5'}, {'parent': 4, 'y': 457, 'type': 'field', 'x': 206, 'size': (350, 198), 'connects': [], 'code': "'''\nWelcome to Pyno!\n\nPyno is a visual language based on Python\n\nYou can find info and tutorials at https://github.com/honix/Pyno\n\n'''"}, {'parent': 5, 'y': 521, 'type': 'field', 'x': 618, 'size': (70, 30), 'connects': [], 'code': '20'}, {'parent': 6, 'y': 291, 'type': 'field', 'x': 481, 'size': (70, 30), 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'node': 2, 'put': {'name': 'result'}}}], 'code': '25'}, {'parent': 7, 'y': 290, 'type': 'node', 'x': 640, 'size': (300, 150), 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'node': 2, 'put': {'name': 'result'}}}, {'input': {'put': {'name': 'b'}}, 'output': {'node': 8, 'put': {'name': 'output'}}}], 'code': 'def devide(a=0, b=0):\n    result = a // b\n    return result', 'color': (116, 127, 128)}, {'parent': 8, 'y': 409, 'type': 'field', 'x': 696, 'size': (70, 30), 'connects': [], 'code': '5'}, {'parent': 9, 'y': 168, 'type': 'field', 'x': 640, 'size': (70, 30), 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'node': 7, 'put': {'name': 'result'}}}], 'code': '5'}, {'parent': 11, 'y': 485, 'type': 'field', 'x': 1038, 'size': (170, 30), 'connects': [], 'code': 'lambda x: x - 5'}, {'parent': 12, 'y': 481, 'type': 'field', 'x': 1336, 'size': (129, 30), 'connects': [], 'code': 'range(1,10)'}, {'parent': 13, 'y': 343, 'type': 'node', 'x': 1193, 'size': (300, 150), 'connects': [{'input': {'put': {'name': 'b'}}, 'output': {'node': 12, 'put': {'name': 'output'}}}, {'input': {'put': {'name': 'a'}}, 'output': {'node': 11, 'put': {'name': 'output'}}}], 'code': 'def outOfFunction(a=None, b=()):\n    result = tuple(map(a,b))\n    return result', 'color': (84, 114, 81)}, {'parent': 14, 'y': 246, 'type': 'field', 'x': 1159, 'size': (328, 30), 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'node': 13, 'put': {'name': 'result'}}}], 'code': '(-4, -3, -2, -1, 0, 1, 2, 3, 4)'}, {'parent': 16, 'y': 203, 'type': 'node', 'x': 135, 'size': (312, 150), 'connects': [], 'code': "def timeSinus():\n    try:\n        S['timer'] += G['dt']\n    except:\n        S['timer'] = 0\n    result = math.sin(S['timer'])\n    return result", 'color': (126, 120, 86)}, {'parent': 17, 'y': 221, 'type': 'field', 'x': 296, 'size': (149, 30), 'connects': [], 'code': 'import math'}, {'parent': 18, 'y': 106, 'type': 'field', 'x': 180, 'size': (224, 30), 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'node': 16, 'put': {'name': 'result'}}}], 'code': '0.6800803577010969'}]