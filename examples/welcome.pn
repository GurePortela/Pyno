[{'color': (100, 130, 117), 'parent': 2, 'type': 'node', 'y': 388, 'x': 535, 'size': (300, 150), 'code': 'def add(a=0, b=0):\n    result = a + b\n    return result', 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': 'output'}, 'node': 3}}, {'input': {'put': {'name': 'b'}}, 'output': {'put': {'name': 'output'}, 'node': 5}}]}, {'parent': 3, 'type': 'field', 'y': 497, 'x': 478, 'size': (70, 30), 'code': '5', 'connects': []}, {'parent': 4, 'type': 'field', 'y': 487, 'x': 166, 'size': (262, 144), 'code': "'''\nWelcome to Pyno!\n\nPyno is a visual language based on Python\n\n'''", 'connects': []}, {'parent': 5, 'type': 'field', 'y': 498, 'x': 597, 'size': (70, 30), 'code': '20', 'connects': []}, {'parent': 6, 'type': 'field', 'y': 268, 'x': 460, 'size': (70, 30), 'code': '25', 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'put': {'name': 'result'}, 'node': 2}}]}, {'color': (116, 127, 128), 'parent': 7, 'type': 'node', 'y': 267, 'x': 619, 'size': (300, 150), 'code': 'def devide(a=0, b=0):\n    result = a // b\n    return result', 'connects': [{'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': 'result'}, 'node': 2}}, {'input': {'put': {'name': 'b'}}, 'output': {'put': {'name': 'output'}, 'node': 8}}]}, {'parent': 8, 'type': 'field', 'y': 376, 'x': 690, 'size': (70, 30), 'code': '5', 'connects': []}, {'parent': 9, 'type': 'field', 'y': 145, 'x': 619, 'size': (70, 30), 'code': '5', 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'put': {'name': 'result'}, 'node': 7}}]}, {'parent': 10, 'type': 'field', 'y': 44, 'x': 394, 'size': (170, 30), 'code': "''' Go down '''", 'connects': []}, {'parent': 11, 'type': 'field', 'y': -70, 'x': 238, 'size': (170, 30), 'code': 'lambda x: x - 5', 'connects': []}, {'parent': 12, 'type': 'field', 'y': -74, 'x': 536, 'size': (129, 30), 'code': 'range(1,10)', 'connects': []}, {'color': (84, 114, 81), 'parent': 13, 'type': 'node', 'y': -212, 'x': 393, 'size': (300, 150), 'code': 'def outOfFunction(a=None, b=()):\n    result = tuple(map(a,b))\n    return result', 'connects': [{'input': {'put': {'name': 'b'}}, 'output': {'put': {'name': 'output'}, 'node': 12}}, {'input': {'put': {'name': 'a'}}, 'output': {'put': {'name': 'output'}, 'node': 11}}]}, {'parent': 14, 'type': 'field', 'y': -309, 'x': 359, 'size': (328, 30), 'code': '(-4, -3, -2, -1, 0, 1, 2, 3, 4)', 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'put': {'name': 'result'}, 'node': 13}}]}, {'parent': 15, 'type': 'field', 'y': -442, 'x': 381, 'size': (184, 30), 'code': "''' Go here! '''", 'connects': []}, {'color': (126, 120, 86), 'parent': 16, 'type': 'node', 'y': -692, 'x': 497, 'size': (312, 150), 'code': "def timeSinus():\n    try:\n        S['timer'] += G['dt']\n    except:\n        S['timer'] = 0\n    result = math.sin(S['timer'])\n    return result", 'connects': []}, {'parent': 17, 'type': 'field', 'y': -739, 'x': 256, 'size': (149, 30), 'code': 'import math', 'connects': []}, {'parent': 18, 'type': 'field', 'y': -794, 'x': 466, 'size': (224, 30), 'code': '-0.021636488014755074', 'connects': [{'input': {'put': {'name': 'input'}}, 'output': {'put': {'name': 'result'}, 'node': 16}}]}, {'parent': 19, 'type': 'field', 'y': -630, 'x': 201, 'size': (258, 148), 'code': "'''\nHere is example of STORE and GLOBAL spaces.\n\nSee code of this node\n\n'''", 'connects': []}]